jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  labelString: "master"
  numExecutors: 10
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  viewsTabBar: "standard"
  projectNamingStrategy: "standard"
  proxy:
    name: "PXYAU301MELC001.ecorptst.anz.com"
    noProxyHost: "dcxcheckmarx.service.anz,github.service.anz,localhost,.service.dev,.service.anz,federation-qa.globaltest.anz.com,.artifactory.gcp.anz,artifactory.gcp.anz,172.30.82.113,172.30.24.169"
    port: 80

  authorizationStrategy:
    projectMatrix:
      permissions:
        - "Overall/Administer:DSE Jenkins"
        - "Overall/Read:DSE Engineering Chapter Leads"
        - "Overall/Read:DSE Devs"
        - "Overall/Read:DSSO Testers"
        - "Overall/Administer:xinj"

  securityRealm:
    activeDirectory:
      customDomain: true
      domains:
        - bindName: global\${JENKINS_GLOBAL_AD_USERNAME}
          bindPassword: ${JENKINS_GLOBAL_AD_PASSWORD}
          name: ${JENKINS_GLOBAL_AD_DOMAIN}
          servers: "global-ldap.lb.apps.anz:3268"
          tlsConfiguration: TRUST_ALL_CERTIFICATES
      # Only RECURSIVE works with ANZ GLOBAL AD anyway
      groupLookupStrategy: RECURSIVE
      removeIrrelevantGroups: false
      startTls: true

  globalNodeProperties:
    - envVars:
        env:
          - key: "http_proxy"
            value: "http://PXYAU301MELC001.ecorptst.anz.com:80"
          - key: "https_proxy"
            value: "http://PXYAU301MELC001.ecorptst.anz.com:80"
          - key: "no_proxy"
            value: "dcxcheckmarx.service.anz,github.service.anz,localhost,.service.dev,.service.anz,federation-qa.globaltest.anz.com,.artifactory.gcp.anz,artifactory.gcp.anz,172.30.82.113,172.30.24.169"
          - key: "JENKINS_SLACK_HOOK_URL"
            value: https://hooks.slack.com/services/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
          - key: "JENKINS_ARTIFACTORY_NPM_USERNAME" # placeholder for npm
            value: "---"
          - key: "JENKINS_ARTIFACTORY_NPM_PASSWORD" # placeholder for npm
            value: "---"

  views:
    - all:
        name: "Areas"

  clouds:
    - kubernetes:
        addMasterProxyEnvVars: true
        containerCapStr: "100"
        credentialsId: "1a12dfa4-7fc5-47a7-aa17-cc56572a41c7"
        jenkinsTunnel: "172.30.82.113:50000"
        jenkinsUrl: "http://localhost:8080"
        maxRequestsPerHostStr: "32"
        name: "openshift"
        namespace: "dse-jenkins"
        serverCertificate: |-
          -----BEGIN CERTIFICATE-----
          MIIC6jCCAdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu
          c2hpZnQtc2lnbmVyQDE1MTYxMTk2MzAwHhcNMTgwMTE2MTYyMDI5WhcNMjMwMTE1
          MTYyMDMwWjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MTYxMTk2MzAw
          ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9ZaXwDLhxbtJFAu+kT6R7
          8N8CzLtvG6+qDUxcw4MbIOgb0kwsXvw+af+bKsrVy2/BlHm3rtSnvZTokffWoEBh
          EjlOfVV/X9f9EE0Xq0k2HE43MFUGyt/Z5q+cpIY7T6w88I1LO3fZPpXjd47lZSjO
          qqyMLLFcZ8LU09RTCf+lxbSfqV+j/PE2UiY9HvCBbbOEcPjNacwgclpRMQoFj3qE
          1byMgsQIfG+C7UlGqH3rHedcQn3wKvM107ivGDWjCWqdp324IynBlOOVpVDzlm5y
          eyLpx63eqhCr7uiokUukNS1j+GYBl6pIfK7/1IYrJK8APhGfouP6lTSnq2MUoSzj
          AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG
          SIb3DQEBCwUAA4IBAQBMa7MiN3wFzudeKQo7c7Opnb1yZmB6E7NttYlEMIjlyi8F
          ipy0sjFzSHbWZcHQoiMsEq0EvrJrrq4jBb3Qmb+kP1mGqHgNpC/g76SYfQQweWw3
          o6Q7GYL9rW16ePi1T3sIeATS89Zb4MyHF1kWyi0cQAqM2DSE/EFsBsfXWIHKREi6
          3+6Een4JNANW/71IW7vIrypDrpOEwH5EM5/9vxUrgoFyAcruffUpyhJmoNPfHe0X
          ks/R+AVKIElJvBzeMO+/s3UWt/AdREjxWTwPg/HS+3ukzFCiukzO3tvpDCM87met
          ByAAlxNnEfklHDEvI2XaE0jXOWLVFzAe2vrbG66A
          -----END CERTIFICATE-----
        serverUrl: "http://localhost:8080"
        templates:
          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-aws-cli:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
            label: "aws-cli"
            name: "aws-cli"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs-12:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12"
            name: "nodejs-12"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs-8-build-utils:v2.0.3
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils"
            name: "nodejs-8-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs-8-build-utils-oracle:v2.0.6
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils-oracle"
            name: "nodejs-8-build-utils-oracle"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs-12-build-utils:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12-build-utils"
            name: "nodejs-12-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs-14:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-14"
            name: "nodejs-14"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-nodejs:1.0.7
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs"
            name: "nodejs"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine
                name: "jnlp"
                workingDir: "/tmp"
            label: "alpine"
            name: "alpine"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: dse-images.artifactory.gcp.anz/jenkins-agent/alpine-docker:2.0
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "DOCKER_HOST"
                      value: "tcp://localhost:2375"
              - alwaysPullImage: false
                image: dse-images.artifactory.gcp.anz/jenkins-agent/dind:v2.0.4
                privileged: true
                name: "dind"
                envVars:
                  - envVar:
                      key: "DOCKER_TLS_CERTDIR"
                      value: ""
            label: "dind"
            name: "dind"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

credentials:
  system:
    domainCredentials:
      - credentials:
          - fileSystemServiceAccountCredential:
              id: "1a12dfa4-7fc5-47a7-aa17-cc56572a41c7"
              scope: GLOBAL
          - usernamePassword:
              id: "dse-jenkins-ssh"
              description: AWS Non-Prod Credentials
              password: "Cfplhyszgyfjch@))%0410"
              scope: GLOBAL
              username: "global\\xinj"
          - string:
              id: "slack-jenkins-plugin-token"
              description: Slack Jenkins Plugin Auth Token
              scope: GLOBAL
              secret: ${JENKINS_SLACK_PLUGIN_TOKEN}
          - gitHubApp:
              appID: "36"
              description: "DSE Jenkins GitHub App"
              id: "github-app-dse"
              apiUri: https://github.service.anz/api/v3
              privateKey: "${JENKINS_GITHUB_APP_KEY}"
          - string:
              id: "apply-tools-os-deployer-token"
              description: Apply Tools Openshift Deployer Token
              scope: GLOBAL
              secret: ${JENKINS_APPLY_TOOLS_OS_DEPLOYER_TOKEN}

jobs:
  - script: >
      folder('admin') {
        displayName('Admin')
      }
  - script: >
      job('admin/admin-seed-jobs') {
        label('master')
        scm {
          git {
            remote {
              url('https://github.service.anz/xinj/jenkins-jobs-xinj.git')
              branch('arvin')
              credentials('dse-jenkins-ssh')
            }
          }
        }
        steps {
          jobDsl {
            targets('jobs/admin/**/*.groovy')
            lookupStrategy('JENKINS_ROOT')
            removedJobAction('IGNORE')
            removedViewAction('IGNORE')
            additionalClasspath('lib/*.jar')
          }
        }
        triggers {
          githubPush()
        }
      }
  - script: >
      queue('admin/admin-seed-jobs')

  - script: >
      job('test-job') {
        label('master')
        scm {
          git {
            remote {
              url('https://github.service.anz/xinj/jenkins-jobs-xinj.git')
              branch('arvin')
              credentials('dse-jenkins-ssh')
            }
          }
        }
        steps {
          jobDsl {
            targets('jobs/admin/**/*.groovy')
            lookupStrategy('JENKINS_ROOT')
            removedJobAction('IGNORE')
            removedViewAction('IGNORE')
            additionalClasspath('lib/*.jar')
          }
        }
      }

security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false

unclassified:
  location:
    adminAddress: "dse-jenkins@anz.com"
    url: "https://dse-jenkins-ci.apps.omni.service.test/"
  gitSCM:
    createAccountBasedOnEmail: false
    globalConfigEmail: "dse-jenkins@anz.com"
    globalConfigName: "DSE-Jenkins"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false

  cxScanBuilder:
    credentialsId: "dse-jenkins-checkmarx"
    enableCertificateValidation: false
    serverUrl: "https://dcxcheckmarx.service.anz"

  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
    endpoints:
      - apiUri: "https://github.service.anz/api/v3"
        name: "ANZ GitHub"
  globalLibraries:
    libraries:
      - allowVersionOverride: true
        defaultVersion: "arvin"
        includeInChangesets: false
        implicit: true
        name: "dse-jobs"
        retriever:
          modernSCM:
            scm:
              git:
                credentialsId: "dse-jenkins-ssh"
                id: "285f0138-3225-4772-9a62-a94680515834"
                remote: "https://github.service.anz/xinj/jenkins-lib-xinj.git"
                traits:
                  - "gitBranchDiscovery"
  pipeline-model-docker:
    dockerLabel: "dind"
    registry:
      url: "https://hub.artifactory.gcp.anz/"
  slackNotifier:
    botUser: false
    room: "#jenkins-alerts"
    sendAsText: false
    teamDomain: "anzdse"
    tokenCredentialId: "slack-jenkins-plugin-token"
