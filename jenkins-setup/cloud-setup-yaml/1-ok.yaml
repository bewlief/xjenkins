jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  labelString: "master"
  numExecutors: 10
  # TODO: master节点的性质，normal：可运行不匹配label=mater得job，EXCLUSIVE：
  mode: NORMAL
  myViewsTabBar: "standard"
  viewsTabBar: "standard"
  disableRememberMe: 'FALSE'
  projectNamingStrategy: "standard"
  #  aopdemo.proxy:
  #    name: "proxy001.xhoe.com"
  #    noProxyHost: "dcxcheckmarx.service.xhoe,github.service.xhoe,localhost,.service.dev,.service.xhoe,federation-qa.globaltest.xhoe.com,.artifactory.gcp.xhoe,artifactory.gcp.xhoe,172.30.82.113,172.30.24.169"
  #    port: 80

  # 设置默认的update center
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins-zh.cn/update-center.json"

  # TODO 设置权限，如ad group，或单一账号的权限
  authorizationStrategy:
    projectMatrix:
      permissions:
        - "Overall/Administer:XOPS Jenkins"
        - "Overall/Read:XOPS Engineering Chapter Leads"
        - "Overall/Read:XOPS Devs"
        - "Overall/Administer:admin"
        - "Overall/Read:DSSO Testers"

  globalNodeProperties:
    - envVars:
        # 环境变量
        env:
          - key: "JENKINS_SLACK_HOOK_URL"
            value: https://hooks.slack.com/services/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
          - key: "JENKINS_ARTIFACTORY_NPM_USERNAME" # placeholder for npm
            value: "---"
          - key: "JENKINS_ARTIFACTORY_NPM_PASSWORD" # placeholder for npm
            value: "---"

  views:
    - all:
        name: "Areas"

  # nodes > configure clouds
  clouds:
    - kubernetes:
        addMasterProxyEnvVars: true
        containerCapStr: "10"
        credentialsId: "jenkins-k8s-sa"
        jenkinsTunnel: "110.110.110.110:50000"
        jenkinsUrl: "http://110.110.110.110:8088"
        maxRequestsPerHostStr: "32"
        name: "kubernetes"
        namespace: "devops"
        # k8s服务证书的 key
        serverCertificate: |-
          -----BEGIN CERTIFICATE-----
          MIIDuDCCAqCgAwIBAgIURpsaPyaZ55dlkEFeYnfJzC3XYsEwDQYJKoZIhvcNAQEL
          BQAwYTELMAkGA1UEBhMCQ04xETAPBgNVBAgTCEhhbmdaaG91MQswCQYDVQQHEwJY
          UzEMMAoGA1UEChMDazhzMQ8wDQYDVQQLEwZTeXN0ZW0xEzARBgNVBAMTCmt1YmVy
          bmV0ZXMwIBcNMjAwODEyMTQ0NDAwWhgPMjEyMDA3MTkxNDQ0MDBaMGExCzAJBgNV
          BAYTAkNOMREwDwYDVQQIEwhIYW5nWmhvdTELMAkGA1UEBxMCWFMxDDAKBgNVBAoT
          A2s4czEPMA0GA1UECxMGU3lzdGVtMRMwEQYDVQQDEwprdWJlcm5ldGVzMIIBIjAN
          BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1vqpCf9mKu8XM2vLUIgK/GPU2XLQ
          lnHerCxKjFNxtp0FYdL7WOTHy0Yh2/fH+1KHt58ZUO1cV75RwT0dftQqnFQZRQ6V
          Ki7jFJ+KWu5+pMTPBwIExXecDs2RVHyVQ8ygn5fzwtWPm5xr/xX9Os/IXeS9I0lE
          gXu/qNjc5sB3FR5tpVDMxLVOi9giRfwjFyZUat/JV6ttWMayOxmOMz7vuptqInUJ
          AJCddHqNSHXce1nApjOtKcLvzQE4OwHEL2UREGkS4CGvLUu+OnQ5wecM/Y71g8Li
          Soe3AuHmLJuzL1lgnrBPxgfofnB1zHzG2om9Lr1i27k2bmJ0P5Yq2A/NPQIDAQAB
          o2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBAjAdBgNVHQ4E
          FgQUP3Px6BQjWmucoR3x5QRLhjfPVaEwHwYDVR0jBBgwFoAUP3Px6BQjWmucoR3x
          5QRLhjfPVaEwDQYJKoZIhvcNAQELBQADggEBAAnh4MiXOYKJ5S66APfdXJdllZaw
          MJO/ZxkyOMmtjo73Y25vyOSqm9SFZXulsUznMHce3B0OGgWSYQdWkrEeSHf7EBBW
          TbeN/qsA9LYIkWTsLHLzPND2imBf1ks/i3iRiuLZ66uDUHBus9jUo92xbqdYYHz/
          WoSHgHz1/KyOmZGTevoCmzBawqIqmtAhsIjctoNMd/le9qwxGWu4hsCFWWf7T2ID
          SOL4fANBPsSd9MYPXYPBLlwIcWdYiwiyPCJz2UfuZARR6J0U5Nx2/JiXfVKbYnB+
          UDkOLWKEGGydcx69w3wE3Pnwhsb6NmJhOYAvjZ7V82FbCqRbE58CCuzX7zA=
          -----END CERTIFICATE-----
        # k8s 地址，kubectl cluster-info
        serverUrl: "https://110.110.110.110:6443"

        #定义了k8s中的pod template类型
        templates:
          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-aws-cli:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
            label: "aws-cli"
            name: "aws-cli"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-12:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12"
            name: "nodejs-12"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-8-build-utils:v2.0.3
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils"
            name: "nodejs-8-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-8-build-utils-oracle:v2.0.6
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils-oracle"
            name: "nodejs-8-build-utils-oracle"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-12-build-utils:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12-build-utils"
            name: "nodejs-12-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-14:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-14"
            name: "nodejs-14"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs:1.0.7
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs"
            name: "nodejs"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine
                name: "jnlp"
                workingDir: "/tmp"
            label: "alpine"
            name: "alpine"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/alpine-docker:2.0
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "DOCKER_HOST"
                      value: "tcp://localhost:2375"
              - alwaysPullImage: false
                image: xops-images.artifactory.gcp.xhoe/jenkins-agent/dind:v2.0.4
                privileged: true
                name: "dind"
                envVars:
                  - envVar:
                      key: "DOCKER_TLS_CERTDIR"
                      value: ""
            label: "dind"
            name: "dind"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

# TODO: 各种credential
credentials:
  system:
    domainCredentials:
      - credentials:
          - fileSystemServiceAccountCredential:
              id: "1a12dfa4-7fc5-47a7-aa17-cc56572a41c7"
              scope: GLOBAL
          # TODO dsr.jar中默认使用XOPS-jenkins-ssh来clone repo
          - basicSSHUserPrivateKey:
              id: "XOPS-jenkins-ssh"
              description: GitHub SSH Key
              passphrase: ${JENKINS_SSH_PASS}
              privateKeySource:
                directEntry:
                  privateKey: ${JENKINS_SSH_KEY}
              scope: GLOBAL
              username: "XOPS-jenkins-ssh"
          - usernamePassword:
              id: "XOPS-jenkins-aws-nonprod"
              description: AWS Non-Prod Credentials
              password: ${JENKINS_AWS_SECRET_ACCESS_KEY}
              scope: GLOBAL
              username: ${JENKINS_AWS_ACCESS_KEY_ID}

          # secret 类型的credential，用于连接k8s
          - string:
              description: "Service account \"jenkins\" in K8S"
              id: "jenkins-k8s-sa"
              scope: GLOBAL
              secret: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjlEclhBRkdyVW15bV83aFRfT3B6bzU3RkticGFzSDRzWldOaC1aSGh1RDgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXZvcHMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiamVua2lucy10b2tlbi1tODlmaiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJqZW5raW5zIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMDFiZDdkZDUtMzA5NC00MTA4LThhMGMtYWIzZGIyMjA5ZGZkIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRldm9wczpqZW5raW5zIn0.ZU-XLZp1VAsYueInIwYs-LReD6Opi-EqJs4-8H7ou0G7u63AHuKCa9BoMNb4JrwX0DZC4NG5stzH4WVw43Bv-pQzuYay7fAx9QDU1hKGUp3KOhQgWAQ7WMSBRcyRtQAJJBTGYzl5whaNIaNTE4E8UgBjlgHp4gsr_L1N8oPBq1obFeSfJr8kQve81tb6DtWlVgVF1V9-fn-wuzdOQkzWeEGmdH6VYTPtNajahDTqWBqjuNYsiBP-RInn7Fza8ICKcMOa1cgPXRNtlDpkvDqWBdXlGkODL4kVJZBbisVZ876Ej2hb7o2-SZsHJkoCEMr0-usKPCugSSkUr2KLYwnzbw"
          # 增加的我的gitee的访问，使用账户和密码，未使用ssh key，但cert.pfx怎么搞的？？？
          - usernamePassword:
              id: "bewlief-gitee"
              description: bewlief @ gitee
              password: ${BEWLIEF_GITEE_PASSWORD}
              scope: GLOBAL
              username: ${BEWLIEF_GITEE_USERNAME}
          # certificate类型，用于连接k8s
          #          - certificate:
          #              id: "k8s-cert"
          #              keyStoreSource:
          #                uploaded:
          #                  uploadedKeystore: "****"
          #              password: "123456"
          #              scope: GLOBAL
          - usernamePassword:
              id: "XOPS-jenkins-checkmarx"
              description: CheckMarx Credentials
              password: ${JENKINS_CHECKMARX_PASS}
              scope: GLOBAL
              username: ${JENKINS_CHECKMARX_USER}
          - usernamePassword:
              id: "globaltest-ad-credentials"
              description: GLOBALTEST AD Credentials
              password: ${JENKINS_GLOBALTEST_AD_PASSWORD}
              scope: GLOBAL
              username: ${JENKINS_GLOBALTEST_AD_USERNAME}
          - usernamePassword:
              id: "global-ad-credentials"
              description: GLOBAL AD Credentials
              password: ${JENKINS_GLOBAL_AD_PASSWORD}
              scope: GLOBAL
              username: ${JENKINS_GLOBAL_AD_USERNAME}
          - usernamePassword:
              id: "global-domain-credentials"
              description: GLOBAL Domain Credentials
              password: ${JENKINS_GLOBAL_AD_PASSWORD}
              scope: GLOBAL
              username: GLOBAL\${JENKINS_GLOBAL_AD_USERNAME}
          - usernamePassword:
              id: "gcp-artifactory-docker"
              description: GCP Artifactory Docker
              password: ${JENKINS_ARTIFACTORY_TOKEN}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_USER}
          - usernamePassword:
              id: "gcp-artifactory"
              description: GCP Artifactory
              password: ${JENKINS_ARTIFACTORY_TOKEN}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_USER}
          - usernamePassword:
              id: "gcp-artifactory-npm"
              description: GCP Artifactory NPM
              password: ${JENKINS_ARTIFACTORY_NPM_PASS}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_NPM_USER}
          - string:
              id: "slack-jenkins-plugin-token"
              description: Slack Jenkins Plugin Auth Token
              scope: GLOBAL
              secret: ${JENKINS_SLACK_PLUGIN_TOKEN}
          - gitHubApp:
              appID: "36"
              description: "XOPS Jenkins GitHub App"
              id: "github-app-XOPS"
              apiUri: https://github.service.xhoe/api/v3
              privateKey: "${JENKINS_GITHUB_APP_KEY}"
          - string:
              id: "apply-tools-os-deployer-token"
              description: Apply Tools Openshift Deployer Token
              scope: GLOBAL
              secret: ${JENKINS_APPLY_TOOLS_OS_DEPLOYER_TOKEN}
          - string:
              id: "new-relic-api-key-non-prod"
              description: XOPS New Relic API Key - Non Prod
              scope: GLOBAL
              secret: ${JENKINS_NEW_RELIC_API_KEY_NON_PROD}
          - string:
              id: "new-relic-api-key-prod"
              description: XOPS New Relic API Key - Prod
              scope: GLOBAL
              secret: ${JENKINS_NEW_RELIC_API_KEY_PROD}

jobs:
  - script: >
      folder('admin') {
        displayName('Admin')
      }
  - script: >
      job('admin/admin-seed-jobs') {
        label('master')
        scm {
          git {
            remote {
              url('https://gitee.com/bewlief/jenkins-jobs.git')
              branch('master')
              credentials('bewlief-gitee')
            }
          }
        }
        steps {
          jobDsl {
            targets('jobs/admin/**/*.groovy')
            lookupStrategy('JENKINS_ROOT')
            removedJobAction('IGNORE')
            removedViewAction('IGNORE')
            additionalClasspath('lib/*.jar')
          }
        }
        triggers {
          githubPush()
        }
      }
  - script: >
      queue('admin/admin-seed-jobs')

security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false

unclassified:
  location:
    # TODO jenkins自身的基本信息
    adminAddress: "XOPS-jenkins@xhoe.com"
    url: "https://XOPS-jenkins-ci.apps.omni.service.test/"
  gitSCM:
    createAccountBasedOnEmail: false
    globalConfigEmail: "XOPS-jenkins@xhoe.com"
    globalConfigName: "XOPS-Jenkins"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false

  cxScanBuilder:
    credentialsId: "XOPS-jenkins-checkmarx"
    enableCertificateValidation: false
    serverUrl: "https://dcxcheckmarx.service.xhoe"

  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
    # configuration中的github enterprise servers设置
    endpoints:
      - apiUri: "https://github.service.xhoe/api/v3"
        name: "xhoe GitHub"
  globalLibraries:
    libraries:
      - allowVersionOverride: true
        defaultVersion: "master"
        includeInChangesets: false
        implicit: true
        name: "XOPS-jobs"
        retriever:
          modernSCM:
            scm:
              git:
                credentialsId: "bewlief-gitee"
                #id: "285f0138-3225-4772-9a62-a94680515834"
                remote: "https://gitee.com/bewlief/jenkins-lib-a.git"
                traits:
                  - "gitBranchDiscovery"
  pipeline-model-docker:
    dockerLabel: "dind"
    registry:
      url: "https://hub.artifactory.gcp.xhoe/"
  #  slackNotifier:
  #    botUser: false
  #    room: "#jenkins-alerts"
  #    sendAsText: false
  #    teamDomain: "xhoeXOPS"
  #    tokenCredentialId: "slack-jenkins-plugin-token"
