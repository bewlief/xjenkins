jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  labelString: "master"
  numExecutors: 10
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  viewsTabBar: "standard"
  projectNamingStrategy: "standard"
  proxy:
    name: "proxy001.xhoe.com"
    noProxyHost: ""
    port: 80

  authorizationStrategy:
    projectMatrix:
      permissions:
        - "Overall/Administer:XOPS Jenkins"
        - "Overall/Read:XOPS Devs"
        - "Overall/Read:DSSO Testers"
        - "Overall/Administer:xinj"

  securityRealm:
    activeDirectory:
      customDomain: true
      domains:
        - bindName: global\${JENKINS_GLOBAL_AD_USERNAME}
          bindPassword: ${JENKINS_GLOBAL_AD_PASSWORD}
          name: ${JENKINS_GLOBAL_AD_DOMAIN}
          servers: "ldaps.global.xhoe.com:3268"
          tlsConfiguration: TRUST_ALL_CERTIFICATES
      # Only RECURSIVE works with xhoe GLOBAL AD anyway
      groupLookupStrategy: RECURSIVE
      removeIrrelevantGroups: false
      startTls: true

  globalNodeProperties:
    - envVars:
        env:
          - key: "http_proxy"
            value: "http://localhost:3128"
          - key: "https_proxy"
            value: "http://localhost:3128"
          - key: "HTTP_PROXY"
            value: "http://localhost:3128"
          - key: "HTTPS_PROXY"
            value: "http://localhost:3128"
          - key: "no_proxy"
            value: "localhost,.service.dev"
          - key: "JENKINS_ARTIFACTORY_NPM_USERNAME" # placeholder for npm
            value: "---"
          - key: "JENKINS_ARTIFACTORY_NPM_PASSWORD" # placeholder for npm
            value: "---"
          - key: "JENKINS_VAULT_ROLE"
            value: "k8s_nonprod_read_0"
          - key: "JENKINS_VAULT_ADDRESS"
            value: "https://"
          - key: "JENKINS_VAULT_NAMESPACE"
            value: ""
          - key: "JENKINS_VAULT_DATAPOWER_SERVICE_ACCOUNT"
            value: ""


  views:
    - all:
        name: "Areas"

  clouds:
    - kubernetes:
        addMasterProxyEnvVars: true
        containerCapStr: "100"
        credentialsId: ""
        jenkinsTunnel: "10.10.10.10:50000"
        jenkinsUrl: "http://10.10.10.10:80"
        maxRequestsPerHostStr: "32"
        name: "openshift"
        namespace: "XOPS-jenkins"
        serverCertificate: |-
          -----BEGIN CERTIFICATE-----
          ...... 
          -----END CERTIFICATE-----
        serverUrl: "https://172.30.0.1:443"
        templates:
          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: images.artifactory.gcp.xhoe/jenkins-agent/alpine-aws-cli:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
            label: "aws-cli"
            name: "aws-cli"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-12:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12"
            name: "nodejs-12"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-8-build-utils:v2.0.3
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils"
            name: "nodejs-8-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-8-build-utils-oracle:v2.0.6
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-8-build-utils-oracle"
            name: "nodejs-8-build-utils-oracle"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-12-build-utils:1.0.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-12-build-utils"
            name: "nodejs-12-build-utils"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs-14:1.0.0
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs-14"
            name: "nodejs-14"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-nodejs:1.0.7
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_USERNAME"
                      value: "---"
                  - envVar:
                      key: "JENKINS_ARTIFACTORY_NPM_PASSWORD"
                      value: "---"
            label: "nodejs"
            name: "nodejs"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine
                name: "jnlp"
                workingDir: "/tmp"
            label: "alpine"
            name: "alpine"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"

          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/alpine-docker:v2.1.4
                name: "jnlp"
                workingDir: "/tmp"
                envVars:
                  - envVar:
                      key: "DOCKER_HOST"
                      value: "tcp://localhost:2375"
                  - envVar:
                      key: "HOME"
                      value: "/home/jenkins"
              - alwaysPullImage: false
                image: XOPS-images.artifactory.gcp.xhoe/jenkins-agent/dind:v2.0.4
                privileged: true
                name: "dind"
                envVars:
                  - envVar:
                      key: "DOCKER_TLS_CERTDIR"
                      value: ""
                  - envVar:
                      key: "HOME"
                      value: "/home/jenkins"
            label: "dind"
            name: "dind"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"
            volumes:
              - emptyDirVolume:
                  mountPath: "/home/jenkins"
                  memory: false

credentials:
  system:
    domainCredentials:
      - credentials:
          - fileSystemServiceAccountCredential:
              id: "1a12dfa4-7fc5-47a7-aa17-cc56572a41c7"
              scope: GLOBAL
          - basicSSHUserPrivateKey:
              id: "XOPS-jenkins-ssh1"
              description: GitHub SSH Key
              passphrase: ${JENKINS_SSH_PASS}
              privateKeySource:
                directEntry:
                  privateKey: ${JENKINS_SSH_KEY}
              scope: GLOBAL
              username: "XOPS-jenkins-ssh1"
          - usernamePassword:
              id: "XOPS-jenkins-ssh"
              description: Credentials to authenticate into AMS git
              scope: GLOBAL
              username: global\xinj
              password: Ytdxcmqwbqsphr@))%0410
          - usernamePassword:
              id: "XOPS-jenkins-xinj"
              description: Credentials to authenticate into AMS git
              scope: GLOBAL
              username: global\xinj
              password: Ytdxcmqwbqsphr@))%0410
          - usernamePassword:
              id: "ams-git"
              description: Credentials to authenticate into AMS git
              scope: GLOBAL
              username: ${JENKINS_AMS_GIT_USERNAME}
              password: ${JENKINS_AMS_GIT_PASSWORD}
          - usernamePassword:
              id: "XOPS-jenkins-aws-nonprod"
              description: AWS Non-Prod Credentials
              password: ${JENKINS_AWS_SECRET_ACCESS_KEY}
              scope: GLOBAL
              username: ${JENKINS_AWS_ACCESS_KEY_ID}
          - usernamePassword:
              id: "XOPS-jenkins-checkmarx"
              description: CheckMarx Credentials
              password: ${JENKINS_CHECKMARX_PASS}
              scope: GLOBAL
              username: ${JENKINS_CHECKMARX_USER}
          - usernamePassword:
              id: "globaltest-ad-credentials"
              description: GLOBALTEST AD Credentials
              password: ${JENKINS_GLOBALTEST_AD_PASSWORD}
              scope: GLOBAL
              username: ${JENKINS_GLOBALTEST_AD_USERNAME}
          - usernamePassword:
              id: "global-ad-credentials"
              description: GLOBAL AD Credentials
              password: ${JENKINS_GLOBAL_AD_PASSWORD}
              scope: GLOBAL
              username: ${JENKINS_GLOBAL_AD_USERNAME}
          - usernamePassword:
              id: "global-domain-credentials"
              description: GLOBAL Domain Credentials
              password: ${JENKINS_GLOBAL_AD_PASSWORD}
              scope: GLOBAL
              username: GLOBAL\${JENKINS_GLOBAL_AD_USERNAME}
          - usernamePassword:
              id: "gcp-artifactory-docker"
              description: GCP Artifactory Docker
              password: ${JENKINS_ARTIFACTORY_TOKEN}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_USER}
          - usernamePassword:
              id: "gcp-artifactory"
              description: GCP Artifactory
              password: ${JENKINS_ARTIFACTORY_TOKEN}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_USER}
          - usernamePassword:
              id: "gcp-artifactory-npm"
              description: GCP Artifactory NPM
              password: ${JENKINS_ARTIFACTORY_NPM_PASS}
              scope: GLOBAL
              username: ${JENKINS_ARTIFACTORY_NPM_USER}
          - string:
              id: "slack-jenkins-plugin-token"
              description: Slack Jenkins Plugin Auth Token
              scope: GLOBAL
              secret: ${JENKINS_SLACK_PLUGIN_TOKEN}
          - gitHubApp:
              appID: "36"
              description: "XOPS Jenkins GitHub App"
              id: "github-app-XOPS"
              apiUri: https://github.service.xhoe/api/v3
              privateKey: "${JENKINS_GITHUB_APP_KEY}"
          - string:
              id: "new-relic-api-key-non-prod"
              description: XOPS New Relic API Key - Non Prod
              scope: GLOBAL
              secret: ${JENKINS_NEW_RELIC_API_KEY_NON_PROD}
          - string:
              id: "new-relic-api-key-prod"
              description: XOPS New Relic API Key - Prod
              scope: GLOBAL
              secret: ${JENKINS_NEW_RELIC_API_KEY_PROD}
          - string:
              id: "jenkins-vault-k8s-service-account-token"
              description: k8s Service account token for Hashicorp Vault
              scope: GLOBAL
              secret: ${readFile:/var/run/secrets/kubernetes.io/serviceaccount/token}
          - string:
              id: "jenkins-vault-datapower-cert"
              description: Digital certificate to access Hashicorp vault via Datapower
              scope: GLOBAL
              secret: ${JENKINS_VAULT_DATAPOWER_CERT}
          - string:
              id: "jenkins-vault-datapower-key"
              description: Private key for jenkins-vault-datapower-cert
              scope: GLOBAL
              secret: ${JENKINS_VAULT_DATAPOWER_KEY}
jobs:
  - script: >
      folder('admin') {
        displayName('Admin')
      }
  - script: >
      job('admin/admin-seed-jobs1111') {
        label('master')
        scm {
          git {
            remote {
              url('https://github.service.xhoe/xinj/jenkins-jobs-xinj.git')
              branch('arvin')
              credentials('XOPS-jenkins-xinj')
            }
          }
        }
        steps {
          jobDsl {
            targets('jobs/admin/**/*.groovy')
            lookupStrategy('JENKINS_ROOT')
            removedJobAction('IGNORE')
            removedViewAction('IGNORE')
            additionalClasspath('lib/*.jar')
          }
        }
        triggers {
          githubPush()
        }
      }
  - script: >
      queue('admin/admin-seed-jobs')

security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false

unclassified:
  location:
    adminAddress: "XOPS-jenkins@xhoe.com"
    url: "https://XOPS-jenkins-ci.apps.omni.service.test/"
  gitSCM:
    createAccountBasedOnEmail: false
    globalConfigEmail: "XOPS-jenkins@xhoe.com"
    globalConfigName: "XOPS-Jenkins"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false

  cxScanBuilder:
    credentialsId: "XOPS-jenkins-checkmarx"
    enableCertificateValidation: false
    serverUrl: "https://dcxcheckmarx.service.xhoe"

  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
    endpoints:
      - apiUri: "https://github.service.xhoe/api/v3"
        name: "xhoe GitHub"
  globalLibraries:
    libraries:
      - allowVersionOverride: true
        defaultVersion: "master"
        includeInChangesets: false
        implicit: true
        name: "XOPS-jobs"
        retriever:
          modernSCM:
            scm:
              git:
                credentialsId: "XOPS-jenkins-xinj"
                id: "285f0138-3225-4772-9a62-a94680515834"
                remote: "https://github.service.xhoe/dsso/jenkins-lib.git"
                traits:
                  - "gitBranchDiscovery"
  pipeline-model-docker:
    dockerLabel: "dind"
    registry:
      url: "https://hub.artifactory.gcp.xhoe/"
  slackNotifier:
    botUser: false
    room: "#jenkins-alerts"
    sendAsText: false
    teamDomain: "xhoeXOPS"
    tokenCredentialId: "slack-jenkins-plugin-token"

  artifactoryBuilder:
    artifactoryServers:
      - artifactoryUrl: "https://artifactory.gcp.xhoe/"
        bypassProxy: true
        deployerCredentialsConfig:
          credentialsId: "gcp-artifactory"
        serverId: "gcp-artifactory"
    useCredentialsPlugin: true
