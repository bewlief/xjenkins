# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

**/nohup.out

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

### IntelliJ IDEA ###
*/.idea/
.idea/
*.iws
*.iml
*.ipr

/target/
**/target
*/.git/
.git/
gradlew
gradlew.bat
*/.mvn/
**/..bfg-report

.flattened-pom.xml

.idea/*
target/*
*/mvnw
*/mvnw.cmd
**/.DS_Store
##               表示此为注释,将被Git忽略
#*.a             表示忽略所有 .a 结尾的文件
#!lib.a          表示但lib.a除外
#/TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO
#build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；
#doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt
#
#bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件
#/bin:           表示忽略根目录下的bin文件
#/*.c:           表示忽略cat.c，不忽略 build/cat.c
#debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj
#**/foo:         表示忽略/foo,a/foo,a/b/foo等
#a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等
#!/bin/run.sh    表示不忽略bin目录下的run.sh文件
#*.log:          表示忽略所有 .log 文件
#securitydemo.config.php:     表示忽略当前路径的 securitydemo.config.php 文件
#
#/mtk/           表示过滤整个文件夹
#*.zip           表示过滤所有.zip文件
#/mtk/do.c       表示过滤某个具体文件
#
#被过滤掉的文件就不会出现在git仓库中（gitlab或github）了，当然本地库中还有，只是push的时候不会上传。
#
#需要注意的是，gitignore还可以指定要将哪些文件添加到版本管理中，如下：
#!*.zip
#!/mtk/one.txt

#还有一些规则如下：
#fd1/*
#说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；
#
#/fd1/*
#说明：忽略根目录下的 /fd1/ 目录的全部内容；
