jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  labelString: "master"
  numExecutors: 10
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  viewsTabBar: "standard"
  projectNamingStrategy: "standard"


  globalNodeProperties:
    - envVars:
        env:
          - key: "JENKINS_SLACK_HOOK_URL"
            value: --

  views:
    - all:
        name: "Areas"

  clouds:
    - kubernetes:
        addMasterProxyEnvVars: true
        containerCapStr: "100"
        credentialsId: "--"
        jenkinsTunnel: "--"
        jenkinsUrl: "--"
        maxRequestsPerHostStr: "32"
        name: "openshift"
        namespace: "--"
        serverCertificate: |-
          -----BEGIN CERTIFICATE-----
          M--A
          -----END CERTIFICATE-----
        serverUrl: "--"
        templates:
          - containers:
              - alwaysPullImage: false
                args: "^${computer.jnlpmac} ^${computer.name}"
                image: --
                name: "jnlp"
                workingDir: "/tmp"
            label: "aws-cli"
            name: "aws-cli"
            serviceAccount: "jenkins"
            slaveConnectTimeoutStr: "0"
            showRawYaml: false
            nodeSelector: "beta.kubernetes.io/os=linux"
            yamlMergeStrategy: "override"


credentials:
  system:
    domainCredentials:
      - credentials:
          - fileSystemServiceAccountCredential:
              id: "--"
              scope: GLOBAL
          - basicSSHUserPrivateKey:
              id: "--"
              description: GitHub SSH Key
              passphrase: ${JENKINS_SSH_PASS}
              privateKeySource:
                directEntry:
                  privateKey: ${JENKINS_SSH_KEY}
              scope: GLOBAL
              username: "--"
          - usernamePassword:
              id: "git-vm110"
              description: Credentials to authenticate into git@vm110
              scope: GLOBAL
              username: ${JENKINS_VM110_GIT_USERNAME}
              password: ${JENKINS_VM110_GIT_PASSWORD}
          - string:
              id: "slack-jenkins-plugin-token"
              description: Slack Jenkins Plugin Auth Token
              scope: GLOBAL
              secret: ${JENKINS_SLACK_PLUGIN_TOKEN}
          - gitHubApp:
              appID: "faa88055-24ff-4522-9714-c2d44f8cdd44"
              description: "Jenkins GitHub App"
              id: "--"
              apiUri: https://github.com/api/v3
              privateKey: "${JENKINS_GITHUB_APP_KEY}"

unclassified:
  globalLibraries:
    libraries:
      - allowVersionOverride: true
        defaultVersion: "master"
        includeInChangesets: false
        implicit: true
        name: "xjcasc-jobs"
        retriever:
          modernSCM:
            scm:
              git:
                credentialsId: "xjcasc-jenkins-ssh"
                id: "--"
                remote: "git@github--/jenkins-lib.git"
                traits:
                  - "gitBranchDiscovery"
